// src/pages/ProfilePage.tsx
import React, { useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import { Navigate } from 'react-router-dom';
import { cn } from '../utils/cn';

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∞–≤–∞—Ç–∞—Ä–∞ (–ø–æ–∑–∂–µ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º)
const AvatarPlaceholder: React.FC<{ size?: number }> = ({ size = 100 }) => (
  <div 
    className={cn(
      'flex items-center justify-center',
      'bg-gradient-to-br from-primary/20 to-primary/40',
      'text-primary font-semibold',
      'border-2 border-primary/30',
      'transition-transform hover:scale-105'
    )}
    style={{ 
      width: size, 
      height: size, 
      borderRadius: '50%',
      fontSize: size / 3,
    }}
  >
    –ê–≤–∞
  </div>
);

const StatCard: React.FC<{ title: string; value: string | number; icon: string }> = ({ title, value, icon }) => (
  <div className="bg-white rounded-lg shadow-sm p-4 border border-gray-100 hover:shadow-md transition-shadow">
    <div className="flex items-center space-x-3">
      <span className="text-2xl">{icon}</span>
      <div>
        <h4 className="text-sm font-medium text-gray-500">{title}</h4>
        <p className="text-lg font-semibold text-gray-900">{value}</p>
      </div>
    </div>
  </div>
);

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞—á–∏–≤–æ–∫
const AchievementsPlaceholder: React.FC = () => (
  <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-100">
    <h3 className="text-lg font-semibold text-gray-900 mb-4">–ú–æ–∏ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
        <span className="text-2xl">üèÜ</span>
        <div>
          <p className="font-medium">–ü–µ—Ä–≤—ã–π —É—Ä–æ–∫ –¢–ì–ü</p>
          <p className="text-sm text-gray-500">–ù–∞—á–∞–ª–æ –ø—É—Ç–∏ –≤ —é—Ä–∏—Å–ø—Ä—É–¥–µ–Ω—Ü–∏–∏</p>
        </div>
      </div>
      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
        <span className="text-2xl">ü•á</span>
        <div>
          <p className="font-medium">5 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥</p>
          <p className="text-sm text-gray-500">–†–µ–≥—É–ª—è—Ä–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</p>
        </div>
      </div>
    </div>
  </div>
);

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥—Ä—É–∑–µ–π
const FriendsPlaceholder: React.FC = () => (
  <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-100">
    <h3 className="text-lg font-semibold text-gray-900 mb-4">–ú–æ–∏ –î—Ä—É–∑—å—è-–Æ—Ä–∏—Å—Ç—ã</h3>
    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
        <div className="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
          <span className="text-primary font-medium">–ö1</span>
        </div>
        <div>
          <p className="font-medium">–ö–æ–ª–ª–µ–≥–∞ ‚Ññ1</p>
          <p className="text-sm text-gray-500">–£—Ä–æ–≤–µ–Ω—å 3</p>
        </div>
      </div>
      <div className="flex items-center space-x-3 p-3 bg-gray-50 rounded-lg">
        <div className="w-10 h-10 rounded-full bg-primary/20 flex items-center justify-center">
          <span className="text-primary font-medium">–ë–ü</span>
        </div>
        <div>
          <p className="font-medium">–ë—É–¥—É—â–∏–π –ü—Ä–æ–∫—É—Ä–æ—Ä</p>
          <p className="text-sm text-gray-500">–£—Ä–æ–≤–µ–Ω—å 5</p>
        </div>
      </div>
    </div>
  </div>
);

const ProfilePage: React.FC = () => {
  const { user, isAuthenticated, isLoading } = useAuth();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è
  // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ 'user.bio' –±—É–¥–µ—Ç –ø–æ–ª–µ–º –Ω–∞ –±—ç–∫–µ–Ω–¥–µ
  const [bio, setBio] = useState(user?.bio || ''); // user.bio - —ç—Ç–æ —Ç–æ, —á—Ç–æ –ø—Ä–∏–¥–µ—Ç —Å –±—ç–∫–∞
  const [isEditingBio, setIsEditingBio] = useState(false);

  // TODO: –í –±—É–¥—É—â–µ–º, –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ user —Å –±—ç–∫–µ–Ω–¥–∞, –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª—è:
  // user.xp_points, user.study_streak_days, user.level, user.avatar_url, user.bio

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary"></div>
      </div>
    );
  }

  if (!isAuthenticated) {
    return <Navigate to="/login" replace />;
  }

  if (!user) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <p className="text-red-500">–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>
      </div>
    );
  }

  const handleBioChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {
    setBio(event.target.value);
  };

  const handleBioSave = async () => {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É bio –Ω–∞ –±—ç–∫–µ–Ω–¥ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    // await userService.updateProfile({ bio }); // –ü—Ä–∏–º–µ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ —Å–µ—Ä–≤–∏—Å–∞
    console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è:", bio);
    setIsEditingBio(false);
  };
  
  // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ–∫–∞ –Ω–µ—Ç –≤ –º–æ–¥–µ–ª–∏ User
  const xpPoints = user.xp_points || 0; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ç–∞–∫–æ–µ –ø–æ–ª–µ –ø–æ—è–≤–∏—Ç—Å—è
  const studyStreakDays = user.study_streak_days || 0; // "–î–Ω–∏ –≤ –ø—Ä–∞–≤–µ"
  const studyLevel = user.level || 1; // –£—Ä–æ–≤–µ–Ω—å –∏–∑—É—á–µ–Ω–∏—è

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div className="bg-white rounded-lg shadow-sm border border-gray-100 overflow-hidden">
        {/* Header Section */}
        <div className="bg-gradient-to-r from-primary/10 to-primary/5 p-6">
          <div className="flex flex-col md:flex-row items-center md:items-start space-y-4 md:space-y-0 md:space-x-6">
            <AvatarPlaceholder size={120} />
            <div className="text-center md:text-left">
              <h1 className="text-2xl font-bold text-gray-900">{user.full_name || user.email}</h1>
              <p className="text-gray-600">–£—Ä–æ–≤–µ–Ω—å {studyLevel} | {xpPoints} XP</p>
            </div>
          </div>
        </div>

        <div className="p-6 space-y-6">
          {/* Stats Section */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <StatCard title="–£—Ä–æ–≤–µ–Ω—å" value={studyLevel} icon="üìö" />
            <StatCard title="–û–ø—ã—Ç" value={`${xpPoints} XP`} icon="‚≠ê" />
            <StatCard title="–î–Ω–µ–π –ø–æ–¥—Ä—è–¥" value={`${studyStreakDays} –¥–Ω–µ–π`} icon="üî•" />
          </div>

          {/* Bio Section */}
          <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-100">
            <div className="flex justify-between items-center mb-4">
              <h3 className="text-lg font-semibold text-gray-900">–û —Å–µ–±–µ</h3>
              {!isEditingBio && (
                <button
                  onClick={() => setIsEditingBio(true)}
                  className="text-sm text-primary hover:text-primary/80"
                >
                  –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                </button>
              )}
            </div>
            {isEditingBio ? (
              <div className="space-y-4">
                <textarea 
                  value={bio} 
                  onChange={handleBioChange} 
                  rows={4} 
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary/50"
                  placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ, –≤–∞—à–∏—Ö –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –≤ –ø—Ä–∞–≤–µ..."
                />
                <div className="flex space-x-3">
                  <button
                    onClick={handleBioSave}
                    className="px-4 py-2 bg-primary text-white rounded-md hover:bg-primary/90 transition-colors"
                  >
                    –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                  </button>
                  <button
                    onClick={() => { setIsEditingBio(false); setBio(user?.bio || ''); }}
                    className="px-4 py-2 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors"
                  >
                    –û—Ç–º–µ–Ω–∞
                  </button>
                </div>
              </div>
            ) : (
              <p className="text-gray-600">{bio || '–û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ.'}</p>
            )}
          </div>

          {/* Achievements Section */}
          <AchievementsPlaceholder />

          {/* Friends Section */}
          <FriendsPlaceholder />

          {/* Additional Info Section */}
          <div className="bg-white rounded-lg shadow-sm p-6 border border-gray-100">
            <h3 className="text-lg font-semibold text-gray-900 mb-4">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div>
                <p className="text-sm text-gray-500">Email</p>
                <p className="font-medium">{user.email}</p>
                <p className="text-sm text-gray-500">
                  {user.is_email_verified ? '‚úì –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω' : '‚úó –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω'}
                </p>
              </div>
              <div>
                <p className="text-sm text-gray-500">–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</p>
                <p className="font-medium">
                  {new Date(user.created_at).toLocaleDateString('ru-RU')}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ProfilePage;